startingPage:
  id: pizza_or_chocolate
  name: Pizza or chocolate
  slug: pizza-or-chocolate
  description: >
    Do you prefer pizza or chocolate? This is a simple example form to demonstrate the structure.
  form: PizzaOrChocolateForm
  redirectWhenComplete:
    - page: pizza_topping
      when:
        key: food
        value: pizza
    - page: type_of_chocolate
      when:
        key: food
        value: chocolate
    - page: neither_page
      when:
        key: food
        value: neither
    - url: https://www.reddit.com/r/catpictures/
      when:
        key: food
        value: no_food_just_cats
    - page: record_search
      when:
        key: food
        value: record

pages:
  - id: neither_page
    name: Neither
    slug: neither
    description: You selected neither pizza nor chocolate.
    template: forms/example/neither.html

  - id: pizza_topping
    name: Pizza toppings
    slug: pizza-topping
    form: PizzaToppingsForm
    requireResponse:
      - page: pizza_or_chocolate
        key: food
        value: pizza
    redirectWhenComplete:
      - page: pizza_photo

  - id: pizza_photo
    name: Pizza photo
    slug: pizza-photo
    form: PizzaPhotoForm
    requires:
      - pizza_topping
    redirectWhenComplete:
      - page: address
    fileHandler: # TODO
      sanitiseFilename: true
      subdirectory: my-pizza-photo

  - id: type_of_chocolate
    name: Type of Chocolate
    slug: type-of-chocolate
    form: TypeOfChocolateForm
    requireResponse:
      - page: pizza_or_chocolate
        key: food
        value: chocolate
    redirectWhenComplete:
      - page: address

  - id: address
    name: Enter your address
    slug: address
    description: We need this to deliver your pizza or chocolate.
    form: AddressForm
    requiresAny:
      - pizza_topping
      - type_of_chocolate
    redirectIfNotComplete: pizza_or_chocolate
    redirectWhenComplete:
      - page: final_page

  - id: record_search
    name: Search for a record
    slug: record-search
    description: Search for a record in our collection.
    form: RecordSearchForm
    requireResponse:
      - page: pizza_or_chocolate
        key: food
        value: record
    redirectWhenComplete:
      - page: record_select

  - id: record_select
    name: Pick a record
    slug: record-select
    description: Select a record.
    form: RecordPickerForm
    template: forms/record_picker_form_page.html
    formData:
      search_form: record_search
      search_key: search
    requires:
      - record_search
    redirectWhenComplete:
      - page: final_page

# TODO
finalPage:
  id: final_page
  name: Thank you
  slug: final-page
  description: This is the final page of the flow.
  body: |
    <p>Thank you for completing the form. We will be in touch shortly.</p>
  template: forms/final.html
  requiresAny:
    - address
    - record_select
  redirectIfNotComplete: pizza_or_chocolate
  resultHandler:
    # type: postgres
    # details:
    #   host: FORM_EXAMPLE_POSTGRES_HOST
    #   port: FORM_EXAMPLE_POSTGRES_PORT
    #   database: FORM_EXAMPLE_POSTGRES_DB
    #   user: FORM_EXAMPLE_POSTGRES_USER
    #   password: FORM_EXAMPLE_POSTGRES_PASSWORD
    #   mapping:
    #     formId: form_id
    #     responses: responses
    #     createdAt: created_at

    # type: mongodb
    # details:
    #   uri: FORM_EXAMPLE_MONGO_URI
    #   database: FORM_EXAMPLE_MONGO_DB
    #   collection: FORM_EXAMPLE_MONGO_COLLECTION
    #   mapping:
    #     formId: form_id
    #     responses: responses
    #     createdAt: created_at

    # type: email
    # details:
    #   smtpServer: FORM_EXAMPLE_EMAIL_SMTP_SERVER
    #   smtpPort: FORM_EXAMPLE_EMAIL_SMTP_PORT
    #   smtpUser: FORM_EXAMPLE_EMAIL_SMTP_USER
    #   smtpPassword: FORM_EXAMPLE_EMAIL_SMTP_PASSWORD
    #   to: team@nationalarchives.gov.uk
    #   subject: New Form Submission
    #   from: noreply@nationalarchives.gov.uk
    #   format: |
    #     A new form has been submitted:
    #     Form ID: {{ formId }}
    #     Responses: {{ responses }}

    type: api
    details:
      url: FORM_EXAMPLE_API_URL
      method: POST
      headers:
        Content-Type: application/json
        Authorization: Bearer { FORM_EXAMPLE_API_BEARER_TOKEN }
      params:
        language: en
      body: |
        {
          "favourite_food": "{ pizza_or_chocolate['food'] }"
        }
  fileHandler:
    type: s3
    details:
      bucket: FORM_EXAMPLE_S3_BUCKET
      region: FORM_EXAMPLE_S3_REGION
      accessKeyId: FORM_EXAMPLE_S3_ACCESS_KEY_ID
      secretAccessKey: FORM_EXAMPLE_S3_SECRET_ACCESS_KEY
