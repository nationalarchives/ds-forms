startingPage:
  id: pizza_or_chocolate
  name: Pizza or chocolate
  slug: pizza-or-chocolate
  description: >
    Do you prefer pizza or chocolate? This is a simple example form to demonstrate the structure.
  form: PizzaOrChocolateForm
  redirectWhenComplete:
    - page: pizza_topping
      when:
        key: food
        value: pizza
    - page: type_of_chocolate
      when:
        key: food
        value: chocolate
    - page: neither_page
      when:
        key: food
        value: neither
    - url: https://www.reddit.com/r/catpictures/
      when:
        key: food
        value: no_food_just_cats

pages:
  - id: neither_page
    name: Neither
    slug: neither
    description: You selected neither pizza nor chocolate.
    template: forms/example/neither.html

  - id: pizza_topping
    name: Pizza toppings
    slug: pizza-topping
    form: PizzaToppingsForm
    requireResponse:
      - page: pizza_or_chocolate
        key: food
        value: pizza
    redirectWhenComplete:
      - page: pizza_photo

  - id: pizza_photo
    name: Pizza photo
    slug: pizza-photo
    form: PizzaPhotoForm
    requires:
      - pizza_topping
    redirectWhenComplete:
      - page: address
    fileHandler: # TODO
      sanitiseFilename: true
      subdirectory: my-pizza-photo

  - id: type_of_chocolate
    name: Type of Chocolate
    slug: type-of-chocolate
    form: TypeOfChocolateForm
    requireResponse:
      - page: pizza_or_chocolate
        key: food
        value: chocolate
    redirectWhenComplete:
      - page: address

  - id: address
    name: Enter your address
    slug: address
    description: We need this to deliver your pizza or chocolate.
    form: AddressForm
    requiresAny:
      - pizza_topping
      - type_of_chocolate
    redirectIfNotComplete: pizza_or_chocolate
    redirectWhenComplete:
      - page: final_page

finalPage:
  id: final_page
  name: Thank you
  slug: final-page
  description: This is the final page of the flow.
  body: |
    <p>Thank you for completing the form. We will be in touch shortly.</p>
  template: forms/final.html
  requires:
    - address
  redirectIfNotComplete: pizza_or_chocolate
  # TODO: Allow multiple handlers
  resultHandler:
    # type: postgres
    # details:
    #   host: EXAMPLE_FORM_POSTGRES_HOST
    #   port: EXAMPLE_FORM_POSTGRES_PORT
    #   database: EXAMPLE_FORM_POSTGRES_DB
    #   user: EXAMPLE_FORM_POSTGRES_USER
    #   password: EXAMPLE_FORM_POSTGRES_PASSWORD
    #   mapping:
    #     formId: form_id
    #     responses: responses
    #     createdAt: created_at

    # type: mongodb
    # details:
    #   uri: EXAMPLE_FORM_MONGO_URI
    #   database: EXAMPLE_FORM_MONGO_DB
    #   collection: EXAMPLE_FORM_MONGO_COLLECTION
    #   mapping:
    #     formId: form_id
    #     responses: responses
    #     createdAt: created_at

    type: email
    details:
      init:
        smtpServer: EXAMPLE_FORM_EMAIL_SMTP_SERVER
        smtpPort: EXAMPLE_FORM_EMAIL_SMTP_PORT
        smtpUser: EXAMPLE_FORM_EMAIL_SMTP_USER
        smtpPassword: EXAMPLE_FORM_EMAIL_SMTP_PASSWORD
      process:
        template: outputs/email.jinja2
      send:
        to: team@nationalarchives.gov.uk
        subject: New Form Submission
        from: noreply@nationalarchives.gov.uk

    # type: api
    # details:
    #   url: EXAMPLE_FORM_API_URL
    #   method: POST
    #   headers:
    #     Content-Type: application/json
    #     Authorization: Bearer { EXAMPLE_FORM_API_BEARER_TOKEN }
    #   params:
    #     language: en
    #   body: |
    #     {
    #       "favourite_food": "{ pizza_or_chocolate['food'] }"
    #     }
  fileHandler:
    type: s3
    details:
      bucket: EXAMPLE_FORM_S3_BUCKET
      region: EXAMPLE_FORM_S3_REGION
      accessKeyId: EXAMPLE_FORM_S3_ACCESS_KEY_ID
      secretAccessKey: EXAMPLE_FORM_S3_SECRET_ACCESS_KEY
